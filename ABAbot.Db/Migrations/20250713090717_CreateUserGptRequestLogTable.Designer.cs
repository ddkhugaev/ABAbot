// <auto-generated />
using System;
using ABAbot.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABAbot.Db.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250713090717_CreateUserGptRequestLogTable")]
    partial class CreateUserGptRequestLogTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("ABAbot.Db.Models.Ikigai", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("GptAns")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhatTheWorldNeeds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatYouAreGoodAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatYouCanBePaidFor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatYouLove")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ikigaies");
                });

            modelBuilder.Entity("ABAbot.Db.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ABAbot.Db.Models.UserGptRequestLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("GptAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserRequest")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserGptRequestLogs");
                });

            modelBuilder.Entity("ABAbot.Db.Models.Ikigai", b =>
                {
                    b.HasOne("ABAbot.Db.Models.User", null)
                        .WithMany("Ikigaies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ABAbot.Db.Models.UserGptRequestLog", b =>
                {
                    b.HasOne("ABAbot.Db.Models.User", null)
                        .WithMany("GptRequestLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ABAbot.Db.Models.User", b =>
                {
                    b.Navigation("GptRequestLogs");

                    b.Navigation("Ikigaies");
                });
#pragma warning restore 612, 618
        }
    }
}
